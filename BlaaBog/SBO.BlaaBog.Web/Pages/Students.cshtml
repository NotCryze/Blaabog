@page "{id:int}"
@using Microsoft.AspNetCore.Mvc.ModelBinding;
@using SBO.BlaaBog.Domain.Entities;
@model SBO.BlaaBog.Web.Pages.StudentsModel
@{
    ViewData["Title"] = Model.Student.Name;
}

<div class="row">
    <div class="col-md-4 mb-3" style="max-height:83vh; height: 83vh">
        <div class="card">
            <div class="card-body">
                <div class="mb-3">
                    <img style="aspect-ratio:1/1;" class="img-fluid rounded w-100 h-100" src="~/img/@Model.Student.Image" />
                </div>
                <div class="mb-3">
                    <h1 class="card-title">@Model.Student.Name</h1>
                    <h5 class="card-subtitle">@Model.Student.Speciality</h5>
                    <span class="text-muted">Graduated @Model.Student.EndDate</span>
                </div>
                <div class="mb-3 overflow-y-auto" style="max-height:250px">
                    <p class="card-text">@Model.Student.Description</p>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8" style="max-height:83vh; height: 83vh">
        <div class="card border-0 h-100" id="comments">
            <h1 class="card-title text-center">Comments</h1>
            <div class="card-body">
                <form method="post">
                    <div class="mb-3 input-group">
                        <input asp-for="Comment.Content" type="text" class="form-control" placeholder="Type a comment..." autocomplete="off" />
                        <button type="submit" class="btn btn-outline-primary">Post</button>
                    </div>
                </form>

                @if (Model.Comments != null)
                {
                    <ul class="list-group overflow-y-auto border-1" style="max-height:60vh; height:60vh;">
                        @foreach (Comment comment in Model.DisplayedComments)
                        {
                            <li class="list-group-item">
                                <div class="row" style="padding:10px;">
                                    <div class="col-md-1">
                                        <div class="me-3" style="width:50px; height:50px; border-radius: 50%; overflow: hidden;">
                                            <img class="w-100 h-100 object-fit-cover" src="~/img/@comment.Author.Image">
                                        </div>
                                    </div>
                                    <div class="col-md-11">
                                        <div class="mw-100" style="flex:1;">
                                            <div class="row">
                                                <div class="col-6">
                                                    <h6 class="mb-1">@comment.Author.Name</h6>
                                                </div>
                                                <div class="col-6">
                                                    <div class="float-end">
                                                        @if (comment.SubjectId == HttpContext.Session.GetInt32("Id"))
                                                        {
                                                            <button class="report-button btn btn-outline-warning btn-sm border-0" data-bs-toggle="modal" data-bs-target="#report-@comment.Id"><i class="fa-solid fa-flag fa-fw"></i></button>
                                                        }
                                                        @if (comment.AuthorId == HttpContext.Session.GetInt32("Id"))
                                                        {
                                                            <button type="button" class="btn btn-outline-danger btn-sm border-0 delete-button" data-bs-toggle="modal" data-bs-target="#delete-@comment.Id"><i class="fa-solid fa-trash fa-fw"></i></button>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <p>@comment.Content</p>
                                            <span class="text-muted float-end">@comment.CreatedAt.AddHours(2)</span>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                }
            </div>
            @if (Model.Comments.Count > Model.PageItems)
            {
                <nav>
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="?page=1#comments" tabindex="-1" aria-disabled="true"><i class="fa-solid fa-angles-left fa-fw"></i></a>
                        </li>
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="?page=@(Model.CurrentPage - 1)#comments" tabindex="-1" aria-disabled="true"><i class="fa-solid fa-angle-left fa-fw"></i></a>
                        </li>
                        @for (int i = Model.StartPage; i <= Model.EndPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i#comments">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.CurrentPage == Model.TotalPage || Model.CurrentPage > Model.TotalPage  ? "disabled" : "")">
                            <a class="page-link" href="?page=@(Model.CurrentPage + 1)#comments"><i class="fa-solid fa-angle-right fa-fw"></i></a>
                        </li>
                        <li class="page-item @(Model.CurrentPage == Model.TotalPage || Model.CurrentPage > Model.TotalPage  ? "disabled" : "")">
                            <a class="page-link" href="?page=@Model.TotalPage#comments"><i class="fa-solid fa-angles-right fa-fw"></i></a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@foreach (Comment comment in Model.DisplayedComments)
{
    @if (comment.SubjectId == HttpContext.Session.GetInt32("Id"))
    {
        <div class="modal fade" id="report-@comment.Id" data-bs-backdrop="static" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <form id="report-form-@comment.Id" method="post" asp-page-handler="ReportComment" asp-route-comment="@comment.Id" onreset="hideOther(@comment.Id)">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5">Report Comment</h1>
                            <button type="reset" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <h6>Comment</h6>
                                <p class="mw-100 text-break overflow-y-auto" style="max-height: 100px;">@comment.Content</p>
                            </div>
                            <div class="mb-3">
                                <h6>Reason</h6>
                                <select asp-for="Report.Reason" class="form-select" asp-items="Model.Reasons" onchange="toggleOther(this, @comment.Id)" required>
                                    <option selected disabled hidden readonly value="">Select a reason</option>
                                </select>
                            </div>
                            <div class="mb-3" id="other-@comment.Id" hidden>
                                <input id="other-field-@comment.Id" asp-for="CustomReason" class="form-control" type="text" placeholder="Reason" pattern="\S(.*\S)?">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="reset" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary"><i class="fa-solid fa-paper-plane fa-fw"></i></button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
    @if (comment.AuthorId == HttpContext.Session.GetInt32("Id"))
    {
        <div class="modal fade" id="delete-@comment.Id" data-bs-backdrop="static" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <form method="post" asp-page-handler="DeleteComment" asp-route-delId="@comment.Id">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5">Delete Comment</h1>
                            <button type="reset" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <h6>Comment</h6>
                                <p class="mw-100 text-break overflow-y-auto" style="max-height: 100px">@comment.Content</p>
                            </div>
                            <div>
                                <h6>Are you sure you want to delete this comment? This cannot be undone.</h6>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="reset" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
}

@section Scripts{
    <script>
        function toggleOther(select, id) {
            let other = document.getElementById("other-" + id);
            let otherField = document.getElementById("other-field-" + id);
            if (select.value == "") {
                other.hidden = false;
                otherField.setAttribute("required", "");
            }
            else {
                other.hidden = true;
                otherField.removeAttribute("required");
            }
        }

        function hideOther(id) {
            document.getElementById("other-" + id).hidden = true;
            document.getElementById("other-field-" + id).removeAttribute("required");
        }
    </script>
}


