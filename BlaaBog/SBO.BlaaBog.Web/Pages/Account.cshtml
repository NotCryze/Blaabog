@page
@using Microsoft.AspNetCore.Mvc.ModelBinding;
@model SBO.BlaaBog.Web.Pages.AccountModel
@{
    ViewData["Title"] = "Account";
}


<div class="row">
    <div class="col-md-4">

        <div class="card mb-3">
            <form method="post" asp-page-handler="UpdateProfilePicture" enctype="multipart/form-data">
                <div class="card-header">
                    <div class="row">
                        <div class="col">
                            <h4 class="mb-0">Profile Picture</h4>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <img style="aspect-ratio:1/1;" class="img-fluid rounded w-100 h-100" src="~/img/@Model.ImageName" />
                    </div>
                    <hr />
                    <div class="input-group has-validation">
                        <input asp-for="Image" aria-describedby="image" accept=".png,.jpg,.jpeg,.gif" type="file" class="form-control @(ModelState.GetFieldValidationState("Image") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Image") == ModelValidationState.Valid ? "is-valid" : "")" required />
                        <button class="btn btn-outline-secondary" type="submit" id="image">Upload</button>
                        <span asp-validation-for="Image" class="invalid-feedback w-100 text-center"></span>
                    </div>
                </div>
            </form>
        </div>

    </div>
    <div class="col-md-8">

        <div class="card mb-3">
            <form method="post" asp-page-handler="ChangeAccountDetails">
                <div class="card-header">
                    <div class="row">
                        <div class="col">
                            <h4 class="mb-0">Account Details</h4>
                        </div>
                        <div class="col-auto me-auto">
                            <button type="reset" class="btn btn-sm btn-outline-danger"><i class="fa-solid fa-xmark fa-fw"></i></button>
                            <button type="submit" class="btn btn-outline-primary btn-sm"><i class="fa-solid fa-check fa-fw"></i></button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md mb-3">
                            <label asp-for="Student.Name" class="form-label">Name</label>
                            <input asp-for="Student.Name" value="@Model.Student.Name" type="text" class="form-control @(ModelState.GetFieldValidationState("Student.Name") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Student.Name") == ModelValidationState.Valid ? "is-valid" : "")" placeholder="Name" />
                            <span asp-validation-for="Student.Name" class="invalid-feedback w-100 text-center"></span>
                        </div>
                        <div class="col-md mb-3">
                            <label asp-for="Student.Email" class="form-label">Email</label>
                            <input asp-for="Student.Email" value="@Model.Student.Email" type="email" class="form-control @(ModelState.GetFieldValidationState("Student.Email") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Student.Email") == ModelValidationState.Valid ? "is-valid" : "")" placeholder="Email" />
                            <span asp-validation-for="Student.Email" class="invalid-feedback w-100 text-center"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md mb-3">
                            <label asp-for="Student.Speciality" class="form-label">Speciality</label>
                            <select asp-for="Student.Speciality" asp-items="Model.Specialities" class="form-select @(ModelState.GetFieldValidationState("Student.Speciality") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Student.Speciality") == ModelValidationState.Valid ? "is-valid" : "")"></select>
                            <span asp-validation-for="Student.Speciality" class="invalid-feedback w-100 text-center"></span>
                        </div>
                        <div class="col-md mb-3">
                            <label class="form-label">End Date</label>
                            <input asp-for="Student.EndDate" value="@(Model.Student.EndDate != null ? Model.Student.EndDate.Value.ToString("yyyy-MM-dd") : null)" type="date" class="form-control @(ModelState.GetFieldValidationState("Student.EndDate") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Student.EndDate") == ModelValidationState.Valid ? "is-valid" : "")" />
                            <span asp-validation-for="Student.EndDate" class="invalid-feedback w-100 text-center"></span>
                        </div>
                    </div>
                    <div>
                        <label asp-for="Student.Description" class="form-label">Description</label>
                        <textarea asp-for="Student.Description" type="text" rows="3" class="form-control @(ModelState.GetFieldValidationState("Student.Description") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Student.Description") == ModelValidationState.Valid ? "is-valid" : "")" placeholder="Description" />@Model.Student.Description</textarea>
                        <span asp-validation-for="Student.Description" class="invalid-feedback w-100 text-center"></span>
                    </div>
                    <span asp-validation-for="Student" class="invalid-feedback w-100 text-center"></span>
                </div>
            </form>
        </div>

        <div class="card mb-3">
            <form method="post" asp-page-handler="ChangePassword">
                <div class="card-header">
                    <div class="row">
                        <div class="col">
                            <h4 class="mb-0">Change Password</h4>
                        </div>
                        <div class="col-auto me-auto">
                            <button type="reset" class="btn btn-sm btn-outline-danger"><i class="fa-solid fa-xmark fa-fw"></i></button>
                            <button type="submit" class="btn btn-outline-primary btn-sm"><i class="fa-solid fa-check fa-fw"></i></button>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="Password.Old" class="form-label">Old Password</label>
                        <input asp-for="Password.Old" class="form-control @(ModelState.GetFieldValidationState("Password.Old") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Password.Old") == ModelValidationState.Valid ? "is-valid" : "")" placeholder="Old Password" autocomplete="off" />
                        <span asp-validation-for="Password.Old" class="invalid-feedback w-100 text-center"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Password.New" class="form-label">New Password</label>
                        <input asp-for="Password.New" class="form-control @(ModelState.GetFieldValidationState("Password.New") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Password.New") == ModelValidationState.Valid ? "is-valid" : "")" placeholder="New Password" autocomplete="off" />
                        <span asp-validation-for="Password.New" class="invalid-feedback w-100 text-center"></span>
                    </div>
                    <div>
                        <label asp-for="Password.Confirm" class="form-label">Confirm Password</label>
                        <input asp-for="Password.Confirm" class="form-control @(ModelState.GetFieldValidationState("Password.Confirm") == ModelValidationState.Invalid ? "is-invalid" : ModelState.GetValidationState("Password.Confirm") == ModelValidationState.Valid ? "is-valid" : "")" placeholder="Confirm Password" autocomplete="off" />
                        <span asp-validation-for="Password.Confirm" class="invalid-feedback w-100 text-center"></span>
                        <span asp-validation-for="Password" class="invalid-feedback w-100 text-center"></span>
                    </div>
                </div>
            </form>
        </div>

    </div>
</div>
